{"version":3,"sources":["redux/common/commonA.ts","components/Markup/Header/Header.tsx","images/img.png","redux/products/productsA.ts","redux/currentProductContent/productItemA.ts","components/Products/ProductItem.tsx","components/Products/Products.tsx","components/Modal/Modal.tsx","components/ShowProductItemContent/CommentModal.tsx","redux/currentProductContent/productItemT.ts","components/ShowProductItemContent/ShowProductItemContent.tsx","components/Markup/Content/Content.tsx","components/Markup/Markup.tsx","App.tsx","reportWebVitals.ts","images/img_1.png","redux/products/productsR.ts","redux/common/commonR.ts","redux/currentProductContent/productItemR.ts","redux/store.ts","index.tsx","components/ShowProductItemContent/ShowProductItemContent.module.css"],"names":["commonA","status","type","useStyles","makeStyles","typographyStyles","flex","whiteColored","color","Header","d","useDispatch","classes","fullUrl","window","location","href","AppBar","position","Toolbar","includes","to","IconButton","className","Typography","onClick","size","productsA","product","id","productItemA","productI","commentId","commentI","textAligning","textAlign","ProductItem","history","useHistory","Grid","item","xs","sm","md","Card","CardHeader","avatar","Avatar","aria-label","src","action","title","name","subheader","weight","CardMedia","style","height","image","imageUrl","CardContent","count","CardActions","container","Button","variant","push","Products","products","useSelector","state","productsR","map","index","spacing","toCenter","toCenterButton","padding","FormDialog","modalStatus","commonR","createProductModalStatus","React","useState","open","setOpen","handleClose","useEffect","validationSchema","Yup","shape","required","min","matches","max","formik","useFormik","initialValues","onSubmit","values","console","log","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","handleSubmit","TextField","fullWidth","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","CommentModal","modalMode","setModalMode","commentsLength","productId","description","comment","date","Date","getState","forEach","comments","ShowProductItemContent","params","useParams","arr","targetProduct","productItemR","productItem","i","length","Number","s","wrapper","CommentI","wrapComment","getHours","margin","getMinutes","filter","commentMappedItem","removeCommentT","Content","url","useRouteMatch","exact","from","path","render","Markup","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialProducts","productNums","media","Math","floor","random","width","createProducts","initialCommon","initialProductItem","reducersList","combineReducers","pushObj","fruitImg","common","undefined","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMW","store","createStore","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8a7c7927.chunk.js","sourcesContent":["export const commonA = {\r\n    modalStatusToggle: (status: boolean) => ({type: \"MODAL_STATUS_TOGGLE\", status}) as const\r\n}","import React, {useState} from \"react\"\r\nimport {AppBar, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {IconButton} from '@material-ui/core';\r\nimport { Modal } from '@material-ui/core';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../redux/store\";\r\nimport {commonA} from \"../../../redux/common/commonA\";\r\nimport {NavLink, useParams, useRouteMatch} from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    typographyStyles: {\r\n        flex: 1\r\n    },\r\n    whiteColored: {\r\n        color: \"white\"\r\n    }\r\n}))\r\n\r\nexport const Header = () => {\r\n    const d = useDispatch()\r\n    const classes = useStyles()\r\n    const fullUrl = window.location.href\r\n    // console.log(url)\r\n    const showModal = () => {\r\n        d(commonA.modalStatusToggle(true))\r\n    }\r\n    return <AppBar position={\"static\"}>\r\n        <Toolbar>\r\n            {!(fullUrl.includes(\"/products\")) && <NavLink to={'/content/products'}>\r\n                <IconButton color={'inherit'}>\r\n                    <KeyboardBackspaceIcon className={classes.whiteColored}/>\r\n                </IconButton>\r\n            </NavLink>\r\n            }<Typography className={classes.typographyStyles}>\r\n                <span>Product site header</span>\r\n            </Typography>\r\n            <span onClick={showModal}>\r\n                <IconButton color={\"inherit\"} size={\"small\"}>\r\n                    Create new product\r\n\r\n                </IconButton>    <IconButton color={\"inherit\"}>\r\n                    <AddIcon color={\"inherit\"}/>\r\n                </IconButton>\r\n            </span>\r\n        </Toolbar>\r\n    </AppBar>\r\n}","export default __webpack_public_path__ + \"static/media/img.e381ae67.png\";","import {CreateProductFormType} from \"../../components/Modal/Modal\";\r\n\r\nexport const productsA = {\r\n    pushProduct: (product: CreateProductFormType) => ({type: \"PUSH_PRODUCT\", product}) as const,\r\n    removeProduct: (id: number) => ({type: \"REMOVE_PRODUCT\", id}) as const\r\n}","import {CommentItemType, ProductItemType} from \"../products/productsR\";\r\n\r\nexport const productItemA = {\r\n    setCurrentProduct: (productI: ProductItemType) => ({type: \"SET_CURRENT_PRODUCT\", productI}) as const,\r\n    removeComment: (commentId: number) => ({type: \"REMOVE_COMMENT\", commentId}) as const,\r\n    addComment: (commentI: CommentItemType) => ({type: \"ADD_COMMENT\", commentI}) as const,\r\n}","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../redux/store\";\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport {ProductItemType} from \"../../redux/products/productsR\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    CardMedia, Grid,\r\n    IconButton, makeStyles,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {ShareRounded} from \"@material-ui/icons\";\r\nimport avatar from '../../images/img.png'\r\nimport {productsA} from \"../../redux/products/productsA\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {productItemA} from \"../../redux/currentProductContent/productItemA\";\r\n\r\ninterface ProductItemProps {\r\n    productI: ProductItemType\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    textAligning: {\r\n        textAlign: \"center\"\r\n    }\r\n})\r\n\r\nexport const ProductItem: React.FC<ProductItemProps> = ({productI}) => {\r\n    const classes = useStyles()\r\n    const d = useDispatch()\r\n    const history = useHistory()\r\n    const removeProductItem = () => {\r\n        d(productsA.removeProduct(productI.id))\r\n    }\r\n    const showInfo = () => {\r\n        d(productItemA.setCurrentProduct(productI))\r\n        history.push(\"/content/productItem/\" + productI.id)\r\n    }\r\n    return <Grid item={true} xs={12} sm={6} md={4}>\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" src={avatar}/>\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\" onClick={removeProductItem}>\r\n                        <HighlightOffIcon/>\r\n                    </IconButton>\r\n                }\r\n                title={productI.name}\r\n                subheader={productI.weight}\r\n            />\r\n            <CardMedia\r\n                style={{height: \"150px\"}}\r\n                image={productI.imageUrl}\r\n                title={productI.name}\r\n            />\r\n            <CardContent>\r\n                <Typography>Amount: {productI.count}</Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.textAligning}>\r\n                <Grid container>\r\n                    <Grid item xs={4}/>\r\n                    <Grid item xs={4}>\r\n                        <Button className={classes.textAligning} variant={\"outlined\"} size=\"small\" onClick={showInfo}>show\r\n                            info</Button>\r\n                    </Grid>\r\n                    <Grid item xs={4}/>\r\n                </Grid>\r\n            </CardActions>\r\n        </Card>\r\n    </Grid>\r\n}","import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../redux/store\";\r\nimport {ProductItem} from \"./ProductItem\";\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nexport const Products = () => {\r\n\r\n    const products = useSelector((state:RootState) => state.productsR.products).map((productI, index) =>\r\n    <ProductItem productI={productI} key={index}/>)\r\n\r\n    return <div>\r\n        <Grid container={true} spacing={2}>\r\n            {products}\r\n        </Grid>\r\n    </div>\r\n}","import React, {ChangeEvent, FormEventHandler, useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../redux/store\";\r\nimport {commonA} from \"../../redux/common/commonA\";\r\nimport {Field, Form, Formik, useFormik} from 'formik';\r\nimport * as Yup from \"yup\"\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {productsA} from \"../../redux/products/productsA\";\r\n\r\nexport interface CreateProductFormType {\r\n    name: string\r\n    count: number\r\n    weight: number\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    toCenter: {\r\n        textAlign: \"center\"\r\n    },\r\n    toCenterButton: {\r\n        textAlign: \"center\",\r\n        padding: \"1%\"\r\n    }\r\n})\r\n\r\nexport const FormDialog = () => {\r\n    const modalStatus = useSelector((state: RootState) => state.commonR.createProductModalStatus)\r\n    const [open, setOpen] = React.useState(false);\r\n    const d = useDispatch()\r\n    const classes = useStyles()\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        d(commonA.modalStatusToggle(false))\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (modalStatus)\r\n            handleClickOpen()\r\n    }, [modalStatus])\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().required('Required')\r\n            .min(2, 'Too Short')\r\n            .matches(\r\n                /^\\S.{0,48}\\S$/, \"don't start or end with space\"\r\n            )\r\n            .max(50, \"Too long\")\r\n        ,\r\n        count: Yup.string().required('Required')\r\n            .max(10, 'Too Long!')\r\n            .matches(/^[0-9]$/, \"only numbers!\"),\r\n        weight: Yup.string().required('Required')\r\n            .max(10, 'Too Long!')\r\n            .matches(/^\\d+$/, \"only numbers!\")\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: \"\",\r\n            count: 1,\r\n            weight: 1000\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            console.log(values)\r\n            d(productsA.pushProduct(values))\r\n            handleClose()\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle className={classes.toCenter} id=\"form-dialog-title\">Creating new product</DialogTitle>\r\n                <DialogContent>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            label=\"name\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.name && Boolean(formik.errors.name)}\r\n                            helperText={formik.touched.name && formik.errors.name}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"count\"\r\n                            name=\"count\"\r\n                            label=\"Count\"\r\n                            value={formik.values.count}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.count && Boolean(formik.errors.count)}\r\n                            helperText={formik.touched.count && formik.errors.count}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"weight\"\r\n                            name=\"weight\"\r\n                            label=\"Weight\"\r\n                            value={formik.values.weight}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.weight && Boolean(formik.errors.weight)}\r\n                            helperText={formik.touched.weight && formik.errors.weight}\r\n                        />\r\n                        <div className={classes.toCenterButton}>\r\n                            <Button  variant={\"outlined\"} color={\"primary\"} type=\"submit\">Submit</Button>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, {ChangeEvent, FormEventHandler, useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../redux/store\";\r\nimport {commonA} from \"../../redux/common/commonA\";\r\nimport {Field, Form, Formik, useFormik} from 'formik';\r\nimport * as Yup from \"yup\"\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {productsA} from \"../../redux/products/productsA\";\r\nimport {pushCommentT} from \"../../redux/currentProductContent/productItemT\";\r\nimport {CommentItemType} from \"../../redux/products/productsR\";\r\n\r\nexport interface CreateProductFormType {\r\n    name: string\r\n    count: number\r\n    weight: number\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    toCenter: {\r\n        textAlign: \"center\"\r\n    },\r\n    toCenterButton: {\r\n        textAlign: \"center\",\r\n        padding: \"1%\"\r\n    }\r\n})\r\n\r\ninterface CommentModalProps {\r\n    modalMode: boolean\r\n    setModalMode: (arg: boolean) => void\r\n    commentsLength: number\r\n    productId: number\r\n}\r\n\r\nexport const CommentModal:React.FC<CommentModalProps> = ({modalMode, setModalMode, commentsLength,productId}) => {\r\n    // const modalStatus = useSelector((state: RootState) => state.commonR.createProductModalStatus)\r\n    const [open, setOpen] = React.useState(modalMode);\r\n    const d = useDispatch()\r\n    const classes = useStyles()\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setModalMode(false)\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (modalMode)\r\n            handleClickOpen()\r\n    }, [modalMode])\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        description: Yup.string().required('Required')\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            description: \"\"\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            console.log(values)\r\n            const comment: CommentItemType = {\r\n                id: commentsLength,\r\n                productId: productId,\r\n                description: values.description,\r\n                date: new Date()\r\n            }\r\n            d(pushCommentT(comment))\r\n            handleClose()\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle className={classes.toCenter} id=\"form-dialog-title\">Creating new product</DialogTitle>\r\n                <DialogContent>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            label=\"Description\"\r\n                            value={formik.values.description}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.description && Boolean(formik.errors.description)}\r\n                            helperText={formik.touched.description && formik.errors.description}\r\n                        />\r\n                        <div className={classes.toCenterButton}>\r\n                            <Button  variant={\"outlined\"} color={\"primary\"} type=\"submit\">Submit</Button>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import {CommentItemType, ProductItemType} from \"../products/productsR\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionsTypes, RootState} from \"../store\";\r\nimport {productItemA} from \"./productItemA\";\r\n\r\nexport const pushCommentT = (commentI: CommentItemType) => (d: Dispatch<ActionsTypes<typeof productItemA>>, getState: () => RootState) =>  {\r\n    d(productItemA.addComment(commentI))\r\n    getState().productsR.products.forEach((productI) => {\r\n        if(productI.id === commentI.productId) {\r\n            productI.comments.push(commentI)\r\n        }\r\n    })\r\n}\r\nexport const removeCommentT = (commentI: CommentItemType) => (d: Dispatch<ActionsTypes<typeof productItemA>>, getState: () => RootState) =>  {\r\n    d(productItemA.removeComment(commentI.id))\r\n    getState().productsR.products.forEach((productI) => {\r\n        if(productI.id === commentI.productId) {\r\n            productI.comments.filter((commentMappedItem) => commentMappedItem.id !== commentI.id)\r\n        }\r\n    })\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../redux/store\";\r\nimport {CommentItemType, ProductItemType} from \"../../redux/products/productsR\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {productItemA} from \"../../redux/currentProductContent/productItemA\";\r\nimport s from './ShowProductItemContent.module.css'\r\nimport {Button} from \"@material-ui/core\";\r\nimport {removeCommentT} from \"../../redux/currentProductContent/productItemT\";\r\nimport {CommentModal} from \"./CommentModal\";\r\n\r\ninterface Param {\r\n    id?: string\r\n}\r\n\r\nexport const ShowProductItemContent = () => {\r\n    const [modalMode, setModalMode] = useState(false)\r\n    const params = useParams<Param>()\r\n    const d = useDispatch()\r\n    const arr = useSelector((state: RootState) => state.productsR.products)\r\n    let targetProduct: ProductItemType | undefined = useSelector((state: RootState) => state.productItemR.productItem)\r\n    useEffect(() => {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i].id === Number(params.id)) {\r\n                d(productItemA.setCurrentProduct(arr[i]))\r\n            }\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i].id === Number(params.id)) {\r\n                targetProduct = {...arr[i]}\r\n            }\r\n        }\r\n    }, [params.id])\r\n\r\n    const showModalInput = () => {\r\n        setModalMode(true)\r\n    }\r\n\r\n    console.log(targetProduct)\r\n    return <div className={s.wrapper}>\r\n        <h1>\r\n            {targetProduct?.name}\r\n        </h1>\r\n        <div>\r\n            <img src={targetProduct?.imageUrl}/>\r\n        </div>\r\n        <div>\r\n            <b>Weight: </b>{targetProduct?.weight}\r\n        </div>\r\n        <div>\r\n            <b>Amount: </b>{targetProduct?.count}\r\n        </div>\r\n\r\n        <div>\r\n            <div>\r\n                <b>Comments: </b>\r\n                <Button variant={\"outlined\"} onClick={showModalInput}> Add comment</Button>\r\n            </div>\r\n            {\r\n                targetProduct?.comments.map((commentI, index) => <CommentI commentI={commentI} key={index}/>)\r\n            }\r\n        </div>\r\n        <CommentModal\r\n            commentsLength={targetProduct?targetProduct.comments.length:0}\r\n            modalMode={modalMode} setModalMode={setModalMode}\r\n            productId={targetProduct?targetProduct.id:0}\r\n        />\r\n    </div>\r\n}\r\n\r\n\r\ninterface CommentIProps {\r\n    commentI: CommentItemType\r\n}\r\n\r\nconst CommentI: React.FC<CommentIProps> = ({commentI}) => {\r\n    const d = useDispatch()\r\n    const removeCommentI = () => {\r\n        d(removeCommentT(commentI))\r\n    }\r\n    return <div className={s.wrapComment}>\r\n        <div></div>\r\n        <div>\r\n            {commentI.description}\r\n        </div>\r\n        <div>\r\n            {commentI.date.getHours()} hr\r\n        </div>\r\n        <div>\r\n            <div className={s.margin}>{commentI.date.getMinutes()} min</div>\r\n            <Button variant={\"outlined\"} onClick={removeCommentI}>remove</Button>\r\n        </div>\r\n        <div></div>\r\n    </div>\r\n}","import React from 'react'\r\nimport {Products} from \"../../Products/Products\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {FormDialog} from \"../../Modal/Modal\";\r\nimport {Redirect, Route, Switch, useParams, useRouteMatch} from 'react-router-dom';\r\nimport {ShowProductItemContent} from \"../../ShowProductItemContent/ShowProductItemContent\";\r\n\r\nexport const Content = () => {\r\n    const d = useDispatch()\r\n    const {url} = useRouteMatch()\r\n    const useParam = useParams()\r\n    return <div>\r\n        <Switch>\r\n            <Redirect exact from={url} to={`${url}/products`}/>\r\n            <Route path={`${url}/products`} render={() => <>\r\n                <Products/>\r\n                <FormDialog/></>}/>\r\n            <Route path={`${url}/productItem/:id`} render={() => <>\r\n            <ShowProductItemContent/></>}/>\r\n        </Switch>\r\n    </div>\r\n}","import React from 'react'\r\nimport {Header} from \"./Header/Header\";\r\nimport {Content} from \"./Content/Content\";\r\n\r\nexport const Markup = () => {\r\n\r\n    return <div>\r\n        <Header/>\r\n        <Content/>\r\n    </div>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {Markup} from \"./components/Markup/Markup\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Switch>\r\n                <Redirect exact from=\"/\" to=\"/content\"/>\r\n                <Route path='/content' render={() => <Markup/>}/>\r\n                <Route path='*' render={() => <div>Error, empty linking</div>}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/img_1.a3e226c4.png\";","import {ActionsTypes} from \"../store\";\r\nimport {productsA} from \"./productsA\";\r\nimport media from '../../images/img.png'\r\nimport fruitImg from '../../images/img_1.png'\r\nfunction makestr() {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < 10; i++)\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n    return text;\r\n}\r\nexport const createProducts = (productNums: number = 5):Array<ProductItemType> => {\r\n    const products: Array<ProductItemType> = []\r\n    for (let i = 0; i < productNums; i++) {\r\n        products.push({\r\n            id: i + 1,\r\n            imageUrl: media,\r\n            name: \"Product Name # \" + (i + 1),\r\n            count: Math.floor(Math.random() * 100),\r\n            size: {\r\n                width: 200,\r\n                height: 200\r\n            },\r\n            weight: Math.floor(Math.random() * 100) + 'g',\r\n            comments: [{\r\n                id: 0,\r\n                productId: i + 1,\r\n                description: 'some text here',\r\n                date: new Date()}]\r\n        })\r\n    }\r\n    return products\r\n}\r\n\r\ninterface InitialProductsType {\r\n    products: Array<ProductItemType>\r\n}\r\n\r\nexport interface ProductItemType {\r\n    id: number\r\n    imageUrl: string\r\n    name: string\r\n    count: number\r\n    size: {\r\n        width: number\r\n        height: number\r\n    },\r\n    weight: string\r\n    comments: Array<CommentItemType>\r\n}\r\n\r\nexport interface CommentItemType {\r\n    id: number\r\n    productId: number\r\n    description: string\r\n    date: Date\r\n}\r\n\r\nconst initialProducts : InitialProductsType = {\r\n    products: createProducts()\r\n}\r\n\r\nexport const productsR = (products: InitialProductsType = initialProducts, action: ActionsTypes<typeof productsA>):InitialProductsType => {\r\n    switch (action.type) {\r\n        case \"PUSH_PRODUCT\":\r\n            const pushObj = {...action.product,\r\n                weight: action.product.weight + \"g\",\r\n                imageUrl: fruitImg,\r\n                id : products.products.length + 1,\r\n                size: {\r\n                    width: 200,\r\n                    height: 200\r\n                },\r\n                comments: []\r\n            }\r\n            return <InitialProductsType>{\r\n                ...products,\r\n                products: [...products.products,\r\n                    pushObj\r\n                ]\r\n            }\r\n        case \"REMOVE_PRODUCT\":\r\n            return {\r\n                ...products,\r\n                products: [...products.products].filter((productI) => productI.id !== action.id)\r\n            }\r\n        default:\r\n            return products\r\n    }\r\n}\r\n","import {ActionsTypes} from \"../store\";\r\nimport {commonA} from \"./commonA\";\r\n\r\n\r\ninterface InitialCommonType {\r\n    createProductModalStatus: boolean\r\n}\r\n\r\n\r\nconst initialCommon: InitialCommonType = {\r\n    createProductModalStatus: false\r\n}\r\n\r\nexport const commonR = (common: InitialCommonType = initialCommon, action: ActionsTypes<typeof commonA>): InitialCommonType => {\r\n    switch (action.type) {\r\n        case \"MODAL_STATUS_TOGGLE\":\r\n            return {\r\n                ...common,\r\n                createProductModalStatus: action.status\r\n            }\r\n        default:\r\n            return common\r\n    }\r\n}\r\n","import {ActionsTypes} from \"../store\";\r\nimport {productItemA} from \"./productItemA\";\r\nimport {ProductItemType} from \"../products/productsR\";\r\n\r\n\r\ninterface InitialProductItemType {\r\n    productItem?: ProductItemType\r\n}\r\n\r\n\r\nconst initialProductItem: InitialProductItemType = {}\r\n\r\nexport const productItemR = (productItem: InitialProductItemType = initialProductItem, action: ActionsTypes<typeof productItemA>): InitialProductItemType => {\r\n    switch (action.type) {\r\n        case \"SET_CURRENT_PRODUCT\":\r\n            return {\r\n                ...productItem,\r\n                productItem: {...action.productI}\r\n            }\r\n        case \"REMOVE_COMMENT\":\r\n            return {\r\n                ...productItem,\r\n                productItem: productItem.productItem ? {\r\n                    ...productItem.productItem,\r\n                    comments: productItem.productItem ? [...productItem.productItem.comments].filter((commentI) => {\r\n                        return commentI.id !== action.commentId\r\n                    }) : []\r\n                } : undefined\r\n            }\r\n        case \"ADD_COMMENT\":\r\n            return {\r\n                ...productItem,\r\n                productItem: productItem.productItem ? {\r\n                    ...productItem.productItem,\r\n                    comments: productItem.productItem ? [...productItem.productItem.comments,\r\n                        {...action.commentI}\r\n                    ] : []\r\n                }:undefined\r\n            }\r\n        default:\r\n            return productItem\r\n    }\r\n}\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\"\r\nimport thunkMW from 'redux-thunk'\r\nimport {productsR} from \"./products/productsR\";\r\nimport {commonR} from \"./common/commonR\";\r\nimport {productItemR} from \"./currentProductContent/productItemR\";\r\n\r\nlet reducersList = combineReducers({\r\n    productsR,\r\n    commonR,\r\n    productItemR\r\n})\r\nexport type RootState = ReturnType<typeof reducersList>\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    // @ts-ignore\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        // @ts-ignore\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n        }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunkMW)\r\n);\r\nlet store = createStore(reducersList, enhancer)\r\ntype PropertiesType<T> = T extends {[key: string]: infer U} ? U : never;\r\nexport type ActionsTypes<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<PropertiesType<T>>\r\n\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ShowProductItemContent_wrapper__3T8J-\",\"wrapComment\":\"ShowProductItemContent_wrapComment__gjVF9\",\"margin\":\"ShowProductItemContent_margin__1Bz7B\"};"],"sourceRoot":""}