{"version":3,"sources":["images/img.png","images/img_1.png","redux/products/productsR.ts","redux/common/commonR.ts","redux/currentProductContent/productItemR.ts","redux/store.ts","redux/common/commonA.ts","components/Markup/Header/Header.tsx","redux/products/productsA.ts","redux/currentProductContent/productItemA.ts","components/Products/ProductItem.tsx","components/Products/Products.tsx","components/Modal/Modal.tsx","components/ShowProductItemContent/CommentModal.tsx","redux/currentProductContent/productItemT.ts","components/ShowProductItemContent/ShowProductItemContent.tsx","components/Markup/Content/Content.tsx","components/Markup/Markup.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/ShowProductItemContent/ShowProductItemContent.module.css"],"names":["initialProducts","products","productNums","i","push","id","imageUrl","media","name","count","Math","floor","random","size","width","height","weight","comments","productId","description","date","Date","createProducts","initialCommon","createProductModalStatus","initialProductItem","reducersList","combineReducers","productsR","action","type","pushObj","product","fruitImg","length","filter","productI","commonR","common","status","productItemR","productItem","commentI","commentId","undefined","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMW","store","createStore","commonA","useStyles","makeStyles","typographyStyles","flex","whiteColored","color","Header","d","useDispatch","classes","fullUrl","location","href","AppBar","position","Toolbar","includes","to","IconButton","className","Typography","onClick","productsA","productItemA","textAligning","textAlign","ProductItem","history","useHistory","Grid","item","xs","sm","md","Card","CardHeader","avatar","Avatar","aria-label","src","title","subheader","CardMedia","style","image","CardContent","CardActions","container","Button","variant","Products","useSelector","state","map","index","spacing","toCenter","toCenterButton","padding","FormDialog","modalStatus","React","useState","open","setOpen","handleClose","useEffect","validationSchema","Yup","shape","required","min","matches","max","formik","useFormik","initialValues","onSubmit","values","console","log","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","handleSubmit","TextField","fullWidth","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","CommentModal","modalMode","setModalMode","commentsLength","comment","getState","forEach","ShowProductItemContent","params","useParams","arr","targetProduct","Number","s","wrapper","CommentI","wrapComment","getHours","margin","getMinutes","commentMappedItem","removeCommentT","Content","url","useRouteMatch","exact","from","path","render","Markup","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bb7bd49d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img.e381ae67.png\";","export default __webpack_public_path__ + \"static/media/img_1.a3e226c4.png\";","import {ActionsTypes} from \"../store\";\r\nimport {productsA} from \"./productsA\";\r\nimport media from '../../images/img.png'\r\nimport fruitImg from '../../images/img_1.png'\r\nfunction makestr() {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < 10; i++)\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n    return text;\r\n}\r\nexport const createProducts = (productNums: number = 5):Array<ProductItemType> => {\r\n    const products: Array<ProductItemType> = []\r\n    for (let i = 0; i < productNums; i++) {\r\n        products.push({\r\n            id: i + 1,\r\n            imageUrl: media,\r\n            name: \"Product Name # \" + (i + 1),\r\n            count: Math.floor(Math.random() * 100),\r\n            size: {\r\n                width: 200,\r\n                height: 200\r\n            },\r\n            weight: Math.floor(Math.random() * 100) + 'g',\r\n            comments: [{\r\n                id: 0,\r\n                productId: i + 1,\r\n                description: 'some text here',\r\n                date: new Date()}]\r\n        })\r\n    }\r\n    return products\r\n}\r\n\r\ninterface InitialProductsType {\r\n    products: Array<ProductItemType>\r\n}\r\n\r\nexport interface ProductItemType {\r\n    id: number\r\n    imageUrl: string\r\n    name: string\r\n    count: number\r\n    size: {\r\n        width: number\r\n        height: number\r\n    },\r\n    weight: string\r\n    comments: Array<CommentItemType>\r\n}\r\n\r\nexport interface CommentItemType {\r\n    id: number\r\n    productId: number\r\n    description: string\r\n    date: Date\r\n}\r\n\r\nconst initialProducts : InitialProductsType = {\r\n    products: createProducts()\r\n}\r\n\r\nexport const productsR = (products: InitialProductsType = initialProducts, action: ActionsTypes<typeof productsA>):InitialProductsType => {\r\n    switch (action.type) {\r\n        case \"PUSH_PRODUCT\":\r\n            const pushObj = {...action.product,\r\n                weight: action.product.weight + \"g\",\r\n                imageUrl: fruitImg,\r\n                id : products.products.length + 1,\r\n                size: {\r\n                    width: 200,\r\n                    height: 200\r\n                },\r\n                comments: []\r\n            }\r\n            return <InitialProductsType>{\r\n                ...products,\r\n                products: [...products.products,\r\n                    pushObj\r\n                ]\r\n            }\r\n        case \"REMOVE_PRODUCT\":\r\n            return {\r\n                ...products,\r\n                products: [...products.products].filter((productI) => productI.id !== action.id)\r\n            }\r\n        default:\r\n            return products\r\n    }\r\n}\r\n","import {ActionsTypes} from \"../store\";\r\nimport {commonA} from \"./commonA\";\r\n\r\n\r\ninterface InitialCommonType {\r\n    createProductModalStatus: boolean\r\n}\r\n\r\n\r\nconst initialCommon: InitialCommonType = {\r\n    createProductModalStatus: false\r\n}\r\n\r\nexport const commonR = (common: InitialCommonType = initialCommon, action: ActionsTypes<typeof commonA>): InitialCommonType => {\r\n    switch (action.type) {\r\n        case \"MODAL_STATUS_TOGGLE\":\r\n            return {\r\n                ...common,\r\n                createProductModalStatus: action.status\r\n            }\r\n        default:\r\n            return common\r\n    }\r\n}\r\n","import {ActionsTypes} from \"../store\";\r\nimport {productItemA} from \"./productItemA\";\r\nimport {ProductItemType} from \"../products/productsR\";\r\n\r\n\r\ninterface InitialProductItemType {\r\n    productItem?: ProductItemType\r\n}\r\n\r\n\r\nconst initialProductItem: InitialProductItemType = {}\r\n\r\nexport const productItemR = (productItem: InitialProductItemType = initialProductItem, action: ActionsTypes<typeof productItemA>): InitialProductItemType => {\r\n    switch (action.type) {\r\n        case \"SET_CURRENT_PRODUCT\":\r\n            return {\r\n                ...productItem,\r\n                productItem: {...action.productI}\r\n            }\r\n        case \"REMOVE_COMMENT\":\r\n            return {\r\n                ...productItem,\r\n                productItem: productItem.productItem ? {\r\n                    ...productItem.productItem,\r\n                    comments: productItem.productItem ? [...productItem.productItem.comments].filter((commentI) => {\r\n                        return commentI.id !== action.commentId\r\n                    }) : []\r\n                } : undefined\r\n            }\r\n        case \"ADD_COMMENT\":\r\n            return {\r\n                ...productItem,\r\n                productItem: productItem.productItem ? {\r\n                    ...productItem.productItem,\r\n                    comments: productItem.productItem ? [...productItem.productItem.comments,\r\n                        {...action.commentI}\r\n                    ] : []\r\n                }:undefined\r\n            }\r\n        default:\r\n            return productItem\r\n    }\r\n}\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\"\r\nimport thunkMW from 'redux-thunk'\r\nimport {productsR} from \"./products/productsR\";\r\nimport {commonR} from \"./common/commonR\";\r\nimport {productItemR} from \"./currentProductContent/productItemR\";\r\n\r\nlet reducersList = combineReducers({\r\n    productsR,\r\n    commonR,\r\n    productItemR\r\n})\r\nexport type RootState = ReturnType<typeof reducersList>\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    // @ts-ignore\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        // @ts-ignore\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n        }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunkMW)\r\n);\r\nlet store = createStore(reducersList, enhancer)\r\ntype PropertiesType<T> = T extends {[key: string]: infer U} ? U : never;\r\nexport type ActionsTypes<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<PropertiesType<T>>\r\n\r\n\r\nexport default store","export const commonA = {\r\n    modalStatusToggle: (status: boolean) => ({type: \"MODAL_STATUS_TOGGLE\", status}) as const\r\n}","import React, {useState} from \"react\"\r\nimport {AppBar, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {IconButton} from '@material-ui/core';\r\nimport { Modal } from '@material-ui/core';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../redux/store\";\r\nimport {commonA} from \"../../../redux/common/commonA\";\r\nimport {NavLink, useParams, useRouteMatch} from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    typographyStyles: {\r\n        flex: 1\r\n    },\r\n    whiteColored: {\r\n        color: \"white\"\r\n    }\r\n}))\r\n\r\nexport const Header = () => {\r\n    const d = useDispatch()\r\n    const classes = useStyles()\r\n    const fullUrl = window.location.href\r\n    // console.log(url)\r\n    const showModal = () => {\r\n        d(commonA.modalStatusToggle(true))\r\n    }\r\n    return <AppBar position={\"static\"}>\r\n        <Toolbar>\r\n            {!(fullUrl.includes(\"/products\")) && <NavLink to={'/content/products'}>\r\n                <IconButton color={'inherit'}>\r\n                    <KeyboardBackspaceIcon className={classes.whiteColored}/>\r\n                </IconButton>\r\n            </NavLink>\r\n            }<Typography className={classes.typographyStyles}>\r\n                <span>Product site header</span>\r\n            </Typography>\r\n            <span onClick={showModal}>\r\n                <IconButton color={\"inherit\"} size={\"small\"}>\r\n                    Create new product\r\n\r\n                </IconButton>    <IconButton color={\"inherit\"}>\r\n                    <AddIcon color={\"inherit\"}/>\r\n                </IconButton>\r\n            </span>\r\n        </Toolbar>\r\n    </AppBar>\r\n}","import {CreateProductFormType} from \"../../components/Modal/Modal\";\r\n\r\nexport const productsA = {\r\n    pushProduct: (product: CreateProductFormType) => ({type: \"PUSH_PRODUCT\", product}) as const,\r\n    removeProduct: (id: number) => ({type: \"REMOVE_PRODUCT\", id}) as const\r\n}","import {CommentItemType, ProductItemType} from \"../products/productsR\";\r\n\r\nexport const productItemA = {\r\n    setCurrentProduct: (productI: ProductItemType) => ({type: \"SET_CURRENT_PRODUCT\", productI}) as const,\r\n    removeComment: (commentId: number) => ({type: \"REMOVE_COMMENT\", commentId}) as const,\r\n    addComment: (commentI: CommentItemType) => ({type: \"ADD_COMMENT\", commentI}) as const,\r\n}","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../redux/store\";\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport {ProductItemType} from \"../../redux/products/productsR\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    CardMedia, Grid,\r\n    IconButton, makeStyles,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {ShareRounded} from \"@material-ui/icons\";\r\nimport avatar from '../../images/img.png'\r\nimport {productsA} from \"../../redux/products/productsA\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {productItemA} from \"../../redux/currentProductContent/productItemA\";\r\n\r\ninterface ProductItemProps {\r\n    productI: ProductItemType\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    textAligning: {\r\n        textAlign: \"center\"\r\n    }\r\n})\r\n\r\nexport const ProductItem: React.FC<ProductItemProps> = ({productI}) => {\r\n    const classes = useStyles()\r\n    const d = useDispatch()\r\n    const history = useHistory()\r\n    const removeProductItem = () => {\r\n        d(productsA.removeProduct(productI.id))\r\n    }\r\n    const showInfo = () => {\r\n        d(productItemA.setCurrentProduct(productI))\r\n        history.push(\"/content/productItem/\" + productI.id)\r\n    }\r\n    return <Grid item={true} xs={12} sm={6} md={4}>\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" src={avatar}/>\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\" onClick={removeProductItem}>\r\n                        <HighlightOffIcon/>\r\n                    </IconButton>\r\n                }\r\n                title={productI.name}\r\n                subheader={productI.weight}\r\n            />\r\n            <CardMedia\r\n                style={{height: \"150px\"}}\r\n                image={productI.imageUrl}\r\n                title={productI.name}\r\n            />\r\n            <CardContent>\r\n                <Typography>Amount: {productI.count}</Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.textAligning}>\r\n                <Grid container>\r\n                    <Grid item xs={4}/>\r\n                    <Grid item xs={4}>\r\n                        <Button className={classes.textAligning} variant={\"outlined\"} size=\"small\" onClick={showInfo}>show\r\n                            info</Button>\r\n                    </Grid>\r\n                    <Grid item xs={4}/>\r\n                </Grid>\r\n            </CardActions>\r\n        </Card>\r\n    </Grid>\r\n}","import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../redux/store\";\r\nimport {ProductItem} from \"./ProductItem\";\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nexport const Products = () => {\r\n\r\n    const products = useSelector((state:RootState) => state.productsR.products).map((productI, index) =>\r\n    <ProductItem productI={productI} key={index}/>)\r\n\r\n    return <div>\r\n        <Grid container={true} spacing={2}>\r\n            {products}\r\n        </Grid>\r\n    </div>\r\n}","import React, {ChangeEvent, FormEventHandler, useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../redux/store\";\r\nimport {commonA} from \"../../redux/common/commonA\";\r\nimport {Field, Form, Formik, useFormik} from 'formik';\r\nimport * as Yup from \"yup\"\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {productsA} from \"../../redux/products/productsA\";\r\n\r\nexport interface CreateProductFormType {\r\n    name: string\r\n    count: number\r\n    weight: number\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    toCenter: {\r\n        textAlign: \"center\"\r\n    },\r\n    toCenterButton: {\r\n        textAlign: \"center\",\r\n        padding: \"1%\"\r\n    }\r\n})\r\n\r\nexport const FormDialog = () => {\r\n    const modalStatus = useSelector((state: RootState) => state.commonR.createProductModalStatus)\r\n    const [open, setOpen] = React.useState(false);\r\n    const d = useDispatch()\r\n    const classes = useStyles()\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        d(commonA.modalStatusToggle(false))\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (modalStatus)\r\n            handleClickOpen()\r\n    }, [modalStatus])\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().required('Required')\r\n            .min(2, 'Too Short')\r\n            .matches(\r\n                /^\\S.{0,48}\\S$/, \"don't start or end with space\"\r\n            )\r\n            .max(50, \"Too long\")\r\n        ,\r\n        count: Yup.string().required('Required')\r\n            .max(10, 'Too Long!')\r\n            .matches(/^[0-9]$/, \"only numbers!\"),\r\n        weight: Yup.string().required('Required')\r\n            .max(10, 'Too Long!')\r\n            .matches(/^\\d+$/, \"only numbers!\")\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: \"\",\r\n            count: 1,\r\n            weight: 1000\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            console.log(values)\r\n            d(productsA.pushProduct(values))\r\n            handleClose()\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle className={classes.toCenter} id=\"form-dialog-title\">Creating new product</DialogTitle>\r\n                <DialogContent>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            label=\"name\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.name && Boolean(formik.errors.name)}\r\n                            helperText={formik.touched.name && formik.errors.name}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"count\"\r\n                            name=\"count\"\r\n                            label=\"Count\"\r\n                            value={formik.values.count}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.count && Boolean(formik.errors.count)}\r\n                            helperText={formik.touched.count && formik.errors.count}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"weight\"\r\n                            name=\"weight\"\r\n                            label=\"Weight\"\r\n                            value={formik.values.weight}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.weight && Boolean(formik.errors.weight)}\r\n                            helperText={formik.touched.weight && formik.errors.weight}\r\n                        />\r\n                        <div className={classes.toCenterButton}>\r\n                            <Button  variant={\"outlined\"} color={\"primary\"} type=\"submit\">Submit</Button>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, {ChangeEvent, FormEventHandler, useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../redux/store\";\r\nimport {commonA} from \"../../redux/common/commonA\";\r\nimport {Field, Form, Formik, useFormik} from 'formik';\r\nimport * as Yup from \"yup\"\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {productsA} from \"../../redux/products/productsA\";\r\nimport {pushCommentT} from \"../../redux/currentProductContent/productItemT\";\r\nimport {CommentItemType} from \"../../redux/products/productsR\";\r\n\r\nexport interface CreateProductFormType {\r\n    name: string\r\n    count: number\r\n    weight: number\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    toCenter: {\r\n        textAlign: \"center\"\r\n    },\r\n    toCenterButton: {\r\n        textAlign: \"center\",\r\n        padding: \"1%\"\r\n    }\r\n})\r\n\r\ninterface CommentModalProps {\r\n    modalMode: boolean\r\n    setModalMode: (arg: boolean) => void\r\n    commentsLength: number\r\n    productId: number\r\n}\r\n\r\nexport const CommentModal:React.FC<CommentModalProps> = ({modalMode, setModalMode, commentsLength,productId}) => {\r\n    // const modalStatus = useSelector((state: RootState) => state.commonR.createProductModalStatus)\r\n    const [open, setOpen] = React.useState(modalMode);\r\n    const d = useDispatch()\r\n    const classes = useStyles()\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setModalMode(false)\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (modalMode)\r\n            handleClickOpen()\r\n    }, [modalMode])\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        description: Yup.string().required('Required')\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            description: \"\"\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            console.log(values)\r\n            const comment: CommentItemType = {\r\n                id: commentsLength,\r\n                productId: productId,\r\n                description: values.description,\r\n                date: new Date()\r\n            }\r\n            d(pushCommentT(comment))\r\n            handleClose()\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle className={classes.toCenter} id=\"form-dialog-title\">Creating new product</DialogTitle>\r\n                <DialogContent>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            label=\"Description\"\r\n                            value={formik.values.description}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.description && Boolean(formik.errors.description)}\r\n                            helperText={formik.touched.description && formik.errors.description}\r\n                        />\r\n                        <div className={classes.toCenterButton}>\r\n                            <Button  variant={\"outlined\"} color={\"primary\"} type=\"submit\">Submit</Button>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import {CommentItemType, ProductItemType} from \"../products/productsR\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionsTypes, RootState} from \"../store\";\r\nimport {productItemA} from \"./productItemA\";\r\n\r\nexport const pushCommentT = (commentI: CommentItemType) => (d: Dispatch<ActionsTypes<typeof productItemA>>, getState: () => RootState) =>  {\r\n    d(productItemA.addComment(commentI))\r\n    getState().productsR.products.forEach((productI) => {\r\n        if(productI.id === commentI.productId) {\r\n            productI.comments.push(commentI)\r\n        }\r\n    })\r\n}\r\nexport const removeCommentT = (commentI: CommentItemType) => (d: Dispatch<ActionsTypes<typeof productItemA>>, getState: () => RootState) =>  {\r\n    d(productItemA.removeComment(commentI.id))\r\n    getState().productsR.products.forEach((productI) => {\r\n        if(productI.id === commentI.productId) {\r\n            productI.comments.filter((commentMappedItem) => commentMappedItem.id !== commentI.id)\r\n        }\r\n    })\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../redux/store\";\r\nimport {CommentItemType, ProductItemType} from \"../../redux/products/productsR\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {productItemA} from \"../../redux/currentProductContent/productItemA\";\r\nimport s from './ShowProductItemContent.module.css'\r\nimport {Button} from \"@material-ui/core\";\r\nimport {removeCommentT} from \"../../redux/currentProductContent/productItemT\";\r\nimport {CommentModal} from \"./CommentModal\";\r\n\r\ninterface Param {\r\n    id?: string\r\n}\r\n\r\nexport const ShowProductItemContent = () => {\r\n    const [modalMode, setModalMode] = useState(false)\r\n    const params = useParams<Param>()\r\n    const d = useDispatch()\r\n    const arr = useSelector((state: RootState) => state.productsR.products)\r\n    let targetProduct: ProductItemType | undefined = useSelector((state: RootState) => state.productItemR.productItem)\r\n    useEffect(() => {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i].id === Number(params.id)) {\r\n                d(productItemA.setCurrentProduct(arr[i]))\r\n            }\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i].id === Number(params.id)) {\r\n                targetProduct = {...arr[i]}\r\n            }\r\n        }\r\n    }, [params.id])\r\n\r\n    const showModalInput = () => {\r\n        setModalMode(true)\r\n    }\r\n\r\n    console.log(targetProduct)\r\n    return <div className={s.wrapper}>\r\n        <h1>\r\n            {targetProduct?.name}\r\n        </h1>\r\n        <div>\r\n            <img src={targetProduct?.imageUrl}/>\r\n        </div>\r\n        <div>\r\n            <b>Weight: </b>{targetProduct?.weight}\r\n        </div>\r\n        <div>\r\n            <b>Amount: </b>{targetProduct?.count}\r\n        </div>\r\n\r\n        <div>\r\n            <div>\r\n                <b>Comments: </b>\r\n                <Button variant={\"outlined\"} onClick={showModalInput}> Add comment</Button>\r\n            </div>\r\n            {\r\n                targetProduct?.comments.map((commentI, index) => <CommentI commentI={commentI} key={index}/>)\r\n            }\r\n        </div>\r\n        <CommentModal\r\n            commentsLength={targetProduct?targetProduct.comments.length:0}\r\n            modalMode={modalMode} setModalMode={setModalMode}\r\n            productId={targetProduct?targetProduct.id:0}\r\n        />\r\n    </div>\r\n}\r\n\r\n\r\ninterface CommentIProps {\r\n    commentI: CommentItemType\r\n}\r\n\r\nconst CommentI: React.FC<CommentIProps> = ({commentI}) => {\r\n    const d = useDispatch()\r\n    const removeCommentI = () => {\r\n        d(removeCommentT(commentI))\r\n    }\r\n    return <div className={s.wrapComment}>\r\n        <div></div>\r\n        <div>\r\n            {commentI.description}\r\n        </div>\r\n        <div>\r\n            {commentI.date.getHours()} hr\r\n        </div>\r\n        <div>\r\n            <div className={s.margin}>{commentI.date.getMinutes()} min</div>\r\n            <Button variant={\"outlined\"} onClick={removeCommentI}>remove</Button>\r\n        </div>\r\n        <div></div>\r\n    </div>\r\n}","import React from 'react'\r\nimport {Products} from \"../../Products/Products\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {FormDialog} from \"../../Modal/Modal\";\r\nimport {Redirect, Route, Switch, useParams, useRouteMatch} from 'react-router-dom';\r\nimport {ShowProductItemContent} from \"../../ShowProductItemContent/ShowProductItemContent\";\r\n\r\nexport const Content = () => {\r\n    const d = useDispatch()\r\n    const {url} = useRouteMatch()\r\n    const useParam = useParams()\r\n    return <div>\r\n        <Switch>\r\n            <Redirect exact from={url} to={`${url}/products`}/>\r\n            <Route path={`${url}/products`} render={() => <>\r\n                <Products/>\r\n                <FormDialog/></>}/>\r\n            <Route path={`${url}/productItem/:id`} render={() => <>\r\n            <ShowProductItemContent/></>}/>\r\n        </Switch>\r\n    </div>\r\n}","import React from 'react'\r\nimport {Header} from \"./Header/Header\";\r\nimport {Content} from \"./Content/Content\";\r\n\r\nexport const Markup = () => {\r\n\r\n    return <div>\r\n        <Header/>\r\n        <Content/>\r\n    </div>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport {Redirect, Route, Switch } from 'react-router-dom';\r\nimport {Markup} from \"./components/Markup/Markup\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={store}>\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    <Redirect exact from=\"/\" to=\"/content\"/>\r\n                    <Route path='/content' render={() => <Markup/>}/>\r\n                    <Route path='*' render={() => <div>Error, empty link</div>}/>\r\n                </Switch>\r\n            </div>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n\r\n            <BrowserRouter>\r\n                <App/>\r\n            </BrowserRouter>\r\n\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ShowProductItemContent_wrapper__1kpz-\",\"wrapComment\":\"ShowProductItemContent_wrapComment__1m5Vd\",\"margin\":\"ShowProductItemContent_margin__jcHqB\"};"],"sourceRoot":""}